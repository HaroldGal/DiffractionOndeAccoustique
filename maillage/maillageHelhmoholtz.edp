
// Parameters
int nbseg=50;
real R=3, xc=0, yc=0, R2=1;
real k=6;
real alpha=0;


// border
border circle1(t=0,2*pi){label=1;x=xc+R*cos(t);
y=yc+R2*sin(t);}

border circle2(t=0,2*pi){
				label=2;
				x=xc+R2/4*cos(t);
				y=yc+R2/4*sin(t);}
///plot(circle1(nbseg*2*pi*R)+circle2(nbseg*2*pi*R2)+C1(nbseg),cmm="border");
/// function


func uinc = exp(1i*k*(x*cos(alpha) + y*sin(alpha)));
//func uinc = sin(k*x/2.0)*sin(k*y/2.0);
//func uinc = x;



// load "gmsh";
//  mesh Th=gmshload("easySurf.msh");

mesh Th = buildmesh(circle1(nbseg*2*pi*R)+circle2(-nbseg*2*pi*R2));
fespace Vh(Th, P1);
Vh<complex> uh,vh;

//solve MonProbleme(uh,vh) =  -int2d(Th)(dx(uh)*dx(vh)) - int2d(Th)(dy(uh)*dy(vh))  + int2d(Th)(uh*vh) - int2d(Th)(uinc*vh) + on(2, uh=uinc);


solve MonProbleme(uh,vh, solver=LU) = -int2d(Th)(dx(uh)*dx(vh)) - int2d(Th)(dy(uh)*dy(vh)) + int2d(Th)(k*k*uh*vh) + int1d(Th,circle1)(1i*k*uh*vh) + on(circle2, uh=-uinc);

///plot(Th, cmm="mesh of a circle with subdomain");
Vh uabs = abs(uh + uinc);
Vh ure = real(uh);
Vh uim = imag(uh);
//plot(uim, wait = true, cmm = "Solution", value = true, fill = true, dim = 2);
plot(ure, wait = true, cmm = "Solution", value = true, fill = true, dim = 2);
//plot(uabs, wait = true, cmm = "Solution", value = true, fill = true, dim = 2);
include "gmshExport.idp";
gmshExport(Th, uh[], "uh.pos");
gmshExport(Th, ure[], "ure.pos");
gmshExport(Th, uabs[], "uabs.pos");
